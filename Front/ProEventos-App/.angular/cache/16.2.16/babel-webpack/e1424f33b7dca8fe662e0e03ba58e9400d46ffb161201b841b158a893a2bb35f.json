{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EventosComponent = class EventosComponent {\n  get filtroLista() {\n    return this._filtroLista;\n  }\n  set filtroLista(value) {\n    this._filtroLista = value;\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n  filtrarEventos(filtrarPor) {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.eventos.filter(evento => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 || evento.local.toLowerCase().indexOf(filtrarPor) !== -1);\n  }\n  constructor(eventoService, modalService, toastr, spinner) {\n    this.eventoService = eventoService;\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.eventos = [];\n    this.eventosFiltrados = [];\n    this.widthImg = 80;\n    this.marginImg = 2;\n    this.imgToggleBtn = true;\n    this.toggleBtnIcon = \"fa-solid fa-eye-slash\";\n    this._filtroLista = '';\n  }\n  ngOnInit() {\n    this.spinner.show();\n    this.getEventos();\n  }\n  toglleBtnImg() {\n    this.imgToggleBtn = !this.imgToggleBtn;\n    if (this.imgToggleBtn == true) {\n      this.toggleBtnIcon = \"fa-solid fa-eye-slash\";\n    } else {\n      this.toggleBtnIcon = \"fa-solid fa-eye\";\n    }\n  }\n  getEventos() {\n    this.eventoService.getEventos().subscribe({\n      next: _eventos => {\n        this.eventos = _eventos, this.eventosFiltrados = this.eventos;\n      },\n      error: error => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao carregar Eventos.', 'Erro');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n  openModal(template) {\n    this.modalRef = this.modalService.show(template, {\n      class: 'modal-sm'\n    });\n  }\n  confirm() {\n    this.modalRef?.hide();\n    this.toastr.success('Evento deletado com sucesso.', 'Deletado');\n  }\n  decline() {\n    this.modalRef?.hide();\n  }\n};\nEventosComponent = __decorate([Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss']\n  //providers: [EventoService]\n})], EventosComponent);","map":{"version":3,"names":["Component","EventosComponent","filtroLista","_filtroLista","value","eventosFiltrados","filtrarEventos","eventos","filtrarPor","toLocaleLowerCase","filter","evento","tema","indexOf","local","toLowerCase","constructor","eventoService","modalService","toastr","spinner","widthImg","marginImg","imgToggleBtn","toggleBtnIcon","ngOnInit","show","getEventos","toglleBtnImg","subscribe","next","_eventos","error","hide","complete","openModal","template","modalRef","class","confirm","success","decline","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\ProEventos\\Front\\ProEventos-App\\src\\app\\components\\eventos\\eventos.component.ts"],"sourcesContent":["import { Component, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { EventoService } from '../../services/evento.service';\nimport { Evento } from '../../models/Evento';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss'],\n  //providers: [EventoService]\n})\nexport class EventosComponent {\n\n  public modalRef?: BsModalRef;\n  public eventos: Evento[] = [];\n  public eventosFiltrados: Evento[] = [];\n  public widthImg: number = 80;\n  public marginImg: number = 2;\n\n  public imgToggleBtn : boolean = true;\n  public toggleBtnIcon = \"fa-solid fa-eye-slash\";\n  private _filtroLista: string = '';\n\n  public get filtroLista(): string {\n  return this._filtroLista;\n  };\n\n  public set filtroLista(value:string) {\n  this._filtroLista = value;\n  this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n\n  public filtrarEventos(filtrarPor: string): Evento[] {\n      filtrarPor = filtrarPor.toLocaleLowerCase();\n      return this.eventos.filter(\n        (evento: any) => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 ||\n        evento.local.toLowerCase().indexOf(filtrarPor) !== -1\n      )\n  }\n\n  constructor(private eventoService: EventoService,\n              private modalService: BsModalService,\n              private toastr: ToastrService,\n              private spinner: NgxSpinnerService) {}\n\n  public ngOnInit(): void {\n    this.spinner.show();\n    this.getEventos();\n    }\n\n  public toglleBtnImg() : void {\n    this.imgToggleBtn = !this.imgToggleBtn;\n    if (this.imgToggleBtn == true ) {\n      this.toggleBtnIcon = \"fa-solid fa-eye-slash\"\n    } else {\n      this.toggleBtnIcon = \"fa-solid fa-eye\"\n    }\n  }\n\n  public getEventos(): void {\n    this.eventoService.getEventos().subscribe({\n      next: (_eventos: Evento[]) => {\n      this.eventos = _eventos,\n        this.eventosFiltrados = this.eventos\n      },\n      error: (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao carregar Eventos.', 'Erro');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n\n\n  public openModal(template: TemplateRef<any>) : void {\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  public confirm(): void {\n    this.modalRef?.hide();\n    this.toastr.success('Evento deletado com sucesso.', 'Deletado');\n  }\n\n  public decline(): void {\n    this.modalRef?.hide();\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}